{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/AddMessageForm.js","components/Dialogs/Dialogs.js","hoc/AuthRedirectDialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","Message","props","className","classes","messages","message","DialogItem","path","id","dialogsItems","to","name","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElement","dialogsPage","dialogs","map","d","messagesElement","m","values","addMessage","newMessage","mapStateToProps","state","isAuth","auth","compose","connect","messagesPage","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,2B,oBCAjED,EAAOC,QAAU,CAAC,aAAe,iCAAiC,OAAS,6B,8GCM5DC,EAJC,SAACC,GACf,OAAO,qBAAKC,UAAWC,IAAQC,SAAxB,SAAmCH,EAAMI,W,0BCUnCC,EATI,SAACL,GAClB,IAAIM,EAAO,WAAaN,EAAMO,GAC9B,OACE,qBAAKN,UAAWC,IAAQM,aAAxB,SACE,cAAC,IAAD,CAASC,GAAIH,EAAb,SAAoBN,EAAMU,U,mDCH1BC,EAAcC,YAAiB,IAgBtBC,cAAU,CAACC,KAAM,2BAAjBD,EAdQ,SAACb,GACtB,OACE,uBAAOe,SAAUf,EAAMgB,aAAvB,UACE,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUT,KAAM,aAC1BU,SAAU,CAACC,IAAUV,GAAiBW,YAAY,wBAE9D,8BACI,kDC8CKC,EAnDC,SAACvB,GAEf,IAAIwB,EAAiBxB,EAAMyB,YAAYC,QACtCC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYlB,KAAMkB,EAAElB,KAAMH,GAAIqB,EAAErB,IAASqB,EAAErB,OAEhDsB,EAAmB7B,EAAMyB,YAAYtB,SACxCwB,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAAS1B,QAAS0B,EAAE1B,SAAc0B,EAAEvB,OAiB/C,OACE,sBAAKN,UAAWC,IAAQwB,QAAxB,UACE,qBAAKzB,UAAWC,IAAQM,aAAxB,SACIgB,IAEJ,sBAAKvB,UAAWC,IAAQE,QAAxB,UACIyB,EACF,cAAC,EAAD,CAAgBd,SAXA,SAACgB,GACnB/B,EAAMgC,WAAWD,EAAOE,sB,8CC3B1BC,EAAkB,SAACC,GACrB,MAAO,CACLC,OAAQD,EAAME,KAAKD,SCsBRE,sBACGC,aAlBI,SAACJ,GACrB,MAAO,CACLV,YAAcU,EAAMK,iBAIC,SAACC,GACxB,MAAM,CACLT,WAAY,SAACC,GACVQ,EAASC,YAAwBT,UDVP,SAACU,GAAe,IAExCC,EAFuC,4JAG3C,WACE,OAAIC,KAAK7C,MAAMoC,OACR,cAACO,EAAD,eAAeE,KAAK7C,QADG,cAAC,IAAD,CAAUS,GAAG,eAJF,GAEbqC,IAAMH,WAOtC,OAAOJ,YAAQL,EAAgB,GAAxBK,CAA4BK,KCStBN,CAGIf","file":"static/js/5.b462f286.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1-erg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__2qEBf\",\"message\":\"Message_message__EeP0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItem_dialogsItems__3vbOj\",\"dialog\":\"DialogItem_dialog__1knGG\"};","import React from 'react';\nimport classes from './Message.module.css'\n\nconst Message = (props) => {\n  return <div className={classes.messages}>{props.message}</div>\n}\n\nexport default Message;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom'\n\nimport classes from './DialogItem.module.css'\n\nconst DialogItem = (props) => {\n  let path = \"dialogs/\" + props.id;\n  return (\n    <div className={classes.dialogsItems}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  );\n}\n\nexport default DialogItem;\n","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { Field } from 'redux-form';\nimport {Textarea} from '../../common/FormsControls/FormsControls';\nimport {maxLengthCreator , required } from '../../utils/validators/validators';\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n  return (\n    <form  onSubmit={props.handleSubmit}>\n      <div>\n          <Field component={Textarea} name= \"newMessage\"\n                  validate={[required, maxLength50 ]}   placeholder=\"Enter yor message\"/>\n      </div>\n      <div>\n          <button >Send</button>\n      </div>\n    </form>\n  );\n}\n\nexport default reduxForm({form: \"dialog-add-message-form\"})(AddMessageForm);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\n\nimport Message from './Message/Message';\nimport DialogItem from './DialogItem/DialogItem'\nimport classes from './Dialogs.module.css';\nimport { reduxForm } from 'redux-form';\nimport { Field } from 'redux-form';\nimport AddMessageForm from './AddMessageForm';\n\nconst Dialogs = (props) => {\n\n  let dialogsElement = props.dialogsPage.dialogs\n  .map(d => <DialogItem name={d.name} id={d.id} key={d.id} /> );\n\n   let messagesElement =  props.dialogsPage.messages\n   .map(m => <Message message={m.message} key={m.id} /> );\n\n   /*let newMessage = props.newMessageText;\n\n   let addMessage = (values) => {\n     props.sendMessage(values.newMessageText);//props.addMessage();//props.changeNewMessageText('');s\n   }*/\n    /*let onMessageChange = (event) => {\n      let body = event.target.value;\n      props.onMessageChange(body);//props.changeNewMessageText(text);\n    }*/\n    //if(props.isAuth  === false ) return <Redirect to={'/login'} />;\n\n    let addNewMessage = (values) => {\n      props.addMessage(values.newMessage);\n    }\n\n  return(\n    <div className={classes.dialogs}>\n      <div className={classes.dialogsItems} >\n        { dialogsElement }\n      </div>\n      <div className={classes.message} >\n        { messagesElement }\n        <AddMessageForm onSubmit={addNewMessage}/>{/*onSubmit = after submit function that work*/}\n      </div>\n    </div>\n  );\n}\n\n/*const AddMessageForm = (props) => {\n  return (\n    <form  onSubmit={props.handleSubmit}>\n      <div>\n          <Field component=\"textarea\" name= \"newMessage\"\n                    placeholder=\"Enter yor message\"/>\n      </div>\n      <div>\n          <button >Send</button>\n      </div>\n    </form>\n  );\n}\n\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);*/\nexport default Dialogs;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nlet mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth\n  }\n}\n\nexport const withAuthRedirect = (Component) => {\n\n  class RedirectComponent extends React.Component {\n    render() {\n      if(!this.props.isAuth) return <Redirect to=\"/login\"/>; // this.props.isAuth === false\n      return <Component {...this.props} />\n    }\n  }\n\n  return connect(mapStateToProps,{})(RedirectComponent);\n}\n","import React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nimport { /*updateNewMessageActionCreator,*/ addMessageActionCreator } from '../../redux/dialogs-reducer'\nimport Dialogs from './Dialogs'\nimport classes from './Dialogs.module.css';\nimport { withAuthRedirect } from '../../hoc/AuthRedirectDialogs';\n\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage:  state.messagesPage\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return{\n   addMessage: (newMessage) => {\n      dispatch(addMessageActionCreator(newMessage)); // passing parameters\n    },\n  /*  onMessageChange: (body) => {\n      dispatch(updateNewMessageActionCreator(body))\n    }*/\n  }\n}\n\nexport default compose(\n                  connect(mapStateToProps,mapDispatchToProps),\n                  withAuthRedirect)\n                  (Dialogs);\n//export default withAuthRedirect(connect(mapStateToProps,mapDispatchToProps)(Dialogs));\n\n/*let mapStateToProps = (state) => {\n  return {\n    messages: [...state.messagesPage.messages],\n    dialogs: [...state.messagesPage.dialogs],\n    newMessageText: state.messagesPage.newMessageText\n  }\n}*/\n"],"sourceRoot":""}